openapi: 3.1.0
info:
  title: Swagger API - Match service
  version: 1.0.0
schemes:
  - http
  - https
paths:
  /api/match/user:
    get:
      summary: Get matches for a user
      tags:
        - Match
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user
      responses:
        '200':
          description: List of user matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
  /api/match:
    get:
      summary: Get all matches
      tags:
        - Match
      responses:
        '200':
          description: List of matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
    post:
      summary: Add given match
      tags:
        - Match
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/NewMatchDto'
      responses:
        '201':
          description: The match was successfully created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Match'
  /api/match/{id}:
    get:
      summary: Get a match
      tags:
        - Match
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The match ID
      responses:
        '200':
          description: Match found
        '404':
          description: Match not found
    put:
      summary: Update a match
      tags:
        - Match
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The match ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UpdateMatchDto'
      responses:
        '200':
          description: Match updated successfully
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Match'
        '404':
          description: Match not found
    delete:
      summary: Delete a match
      tags:
        - Match
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The match ID
      responses:
        '200':
          description: Match deleted
        '404':
          description: Match not found
  /api/match/{matchId}/invite:
    post:
      summary: Invite a user to a match
      tags:
        - Match
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: integer
          description: ID of the match
        - in: query
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user to invite
      responses:
        '204':
          description: Invitation sent successfully
        '400':
          description: User already invited or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User has already been invited to this match
        '500':
          description: Internal server error
  /api/match/{matchId}/accept:
    post:
      summary: Accept an invitation to a match
      tags:
        - Match
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: integer
          description: ID of the match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              example:
                userId: 123
      responses:
        '204':
          description: Invitation accepted successfully
        '400':
          description: User not invited or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User has not been invited to this match
        '500':
          description: Internal server error
  /api/match/{matchId}/decline:
    post:
      summary: Decline an invitation to a match
      tags:
        - Match
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: integer
          description: ID of the match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              example:
                userId: 123
      responses:
        '204':
          description: Invitation declined successfully
        '400':
          description: User not invited or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User has not been invited to this match
        '500':
          description: Internal server error
  /api/match/{matchId}/join:
    post:
      summary: Join a public match by its ID
      tags:
        - Match
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: integer
          description: The ID of the match to join
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: The ID of the user joining the match
              example:
                userId: 123
      responses:
        '204':
          description: Successfully joined the public match
        '400':
          description: Match is not public or user already in match
          headers:
            X-Status-Message:
              description: Reason for the error
              schema:
                type: string
                example: Match is not public
          content:
            application/json:
              schema:
                type: object
                examples:
                  notPublic:
                    summary: Match is not public
                    value:
                      message: Match is not public
                  alreadyInMatch:
                    summary: User already in match
                    value:
                      message: User is already part of this match
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                example:
                  message: An unexpected error occurred
components:
  schemas:
    Match:
      type: object
      properties:
        id:
          type: number
          description: Unique identifier for the match
        userIds:
          type: array
          items:
            type: string
          description: List of user IDs associated with the match (stored as a JSON array)
        winnerId:
          type: string
          nullable: true
          description: The ID of the winner if the match is finished
        pendingInvitations:
          type: array
          items:
            type: string
          description: >-
            List of user IDs who have pending invitations to join the match
            (stored as a JSON array)
        isPublic:
          type: boolean
          description: Indicates if the match is public
        status:
          type: string
          enum:
            - CREATED
            - PENDING
            - ENDED
          description: The current status of the match
        createdAt:
          type: string
          format: date-time
          description: The date and time when the match was created
        finishedAt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the match finished, if applicable
      required:
        - id
        - userIds
        - isPublic
        - status
        - createdAt
      example:
        id: 1
        userIds:
          - '1'
          - '2'
          - '3'
        winnerId: '2'
        pendingInvitations:
          - '4'
        isPublic: true
        status: PENDING
        createdAt: '2025-01-24T12:00:00Z'
        finishedAt: '2025-01-25T14:30:00Z'
    NewMatchDto:
      type: object
      properties:
        invitations:
          type: array
          items:
            type: number
          description: List of user IDs to invite
        public:
          type: boolean
          description: Indicates if the match should be public
        userId:
          type: number
          description: The current user's ID
    UpdateMatchDto:
      type: object
      properties:
        status:
          type: string
          enum:
            - CREATED
            - PENDING
            - ENDED
tags:
  - name: Match
    description: Op√©rations sur les matchs
